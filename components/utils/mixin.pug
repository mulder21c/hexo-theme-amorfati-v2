mixin pageTitle
  title= getTitle()

mixin pageSequenceLink
  -
    const { prev_link, prev, next_link, next } = page;
    const prevLink = prev_link ? `${config.url}/${prev_link}` : prev?.permalink;
    const nextLink = next_link ? `${config.url}/${next_link}` : next?.permalink;

  if (prevLink)
    link(rel="prev" href=stripFileName(prevLink))
  if (nextLink)
    link(rel="next" href=stripFileName(nextLink))

mixin preLoadImage
  - const imageObj = representativeImage(page);
  if (imageObj)
    link(
      rel="preload"
      as="image"
      href=full_url(imageObj.path)
      crossorigin="anonymous"
    )

mixin openGraph(options)
  -
    const defaultOptions = {
      title: getTitle(),
      type: `blog`,
      url: stripFileName(url),
    };
    const properties = {
      ...defaultOptions,
      ...options,
    };
  | !{ open_graph(properties) }

mixin siteVerification
  each val, prop in (theme.site_verification || [])
    meta(name=prop content=val)

mixin styles(paths = [])
  link(rel="stylesheet" href=url_for("/css/index.css"))
  each path in paths
    link(rel="stylesheet" href=path)

mixin jsonLD
  -
    const jsonLdProps = getJsonLdProps(page);
    const currPageType = is_post()
      ? `post`
      : (is_archive() || is_category() || is_tag())
        ? `collection`
        : `home`;

    const jsonLD = {
      "@context": `http://schema.org`,
      ...jsonLdProps.getType(currPageType),
      ...jsonLdProps.getName(),
      ...jsonLdProps.getUrl(),
      ...jsonLdProps.getDescription(),
      ...jsonLdProps.getCopyRightHolder(),
      ...jsonLdProps.getImage(),
      ...jsonLdProps.getAuthor(),
      ...([`post`].includes(currPageType) ? jsonLdProps.getPostLD() : {}),
      ...(
        [`collection`, `home`].includes(currPageType)
          ? jsonLdProps.getItemList()
          : undefined
      ),
    };
  script(type="application/ld+json")
    | !{ JSON.stringify(jsonLD) }
