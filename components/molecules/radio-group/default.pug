include /components/atoms/radios/default.pug

//- @pugdoc
  name: radioGroup
  description: create radio group component
  see: test
  beforeEach: |
    include ../../utils/util
    include ../../atoms/radios/default.pug
  arguments:
    - {object} props
    - {string} props.name - attribute of radio
    - {array} props.options - the array that consists of options for radio component without name and labelPosition
    - {number|null} [props.columns] - column counts
    - {string} [props.labelPosition] [`right`] - Where the label is located relative to the visual indicator<br>One of `'top'`, `'left'`, `'right'`, `'bottom'`
  examples:
    - |
      +radioGroup({
        name: `job`,
        labelPosition: `right`,
        columns: 3,
        options: [
          { label: `designer`, value: `designer`, },
          { label: `publisher`, value: `publisher`, },
          { label: `frontend developer`, value: `frontend`, },
          { label: `devops`, value: `devops`, },
          { label: `iOS developer`, value: `ios`, },
        ],
      })
mixin radioGroup(props)
  -
    // verifying props
    const radioGroupProps = {
      name: PropTypes.string.isRequired,
      options: PropTypes.array.isRequired,
      columns: PropTypes.number,
      labelPosition: PropTypes.oneOf([
        `top`,
        `left`,
        `right`,
        `bottom`,
      ]),
    };
    const radioGroupValidate = validateProps(radioGroupProps);
    const defaults = {options: null, columns: null};
    const { name, columns, labelPosition, options, ...attrs } = {
      ...defaults,
      ...props,
    };
    radioGroupValidate({name, columns, labelPosition, options});

    const {prefix} = theme;
    const uid = id || generateUid();

  div(
    class=[`${prefix}-radio-group`, { [`${prefix}-radio-group--col-${columns}`]: columns }]
  )&attributes(attrs)
    each option in options
      -
        const radioOption = {
          name,
          labelPosition,
          id: generateUid(),
          class: `${prefix}-radio-group__item`,
          ...option,
        };
      +radio(radioOption)
