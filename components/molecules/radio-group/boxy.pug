include /components/atoms/radios/boxy.pug

//- @pugdoc
  name: radioBoxes
  description: create radio group component
  see: test
  beforeEach: |
    include ../../utils/util
    include ../../atoms/radios/boxy.pug
  arguments:
    - {object} props
    - {string} props.name - attribute of radio
    - {array} props.options - the array that consists of options for radio component
  examples:
    - |
      +radioBoxes({
        name: `size`,
        options: [
          { label: `small`, value: `small`, },
          { label: `medium`, value: `medium`, },
          { label: `large`, value: `large`, },
        ],
      })

mixin radioBoxes(props)
  -
    // verifying props
    const radioBoxesProps = {
      name: PropTypes.string.isRequired,
      options: PropTypes.array.isRequired,
    };
    const radioBoxesValidate = validateProps(radioBoxesProps);
    const defaults = {options: null, columns: null};
    const { name, options, ...attrs } = {
      ...defaults,
      ...props,
    };
    radioBoxesValidate({name, labelPosition, options});

    const {prefix} = theme;
    const uid = id || generateUid();

  div(class=[`${prefix}-radio-boxes`])&attributes(attrs)
    each option, idx in options
      -
        const radioOption = {
          name,
          id: generateUid(),
          ...option,
          class: `${prefix}-radio-boxes__item`
        };
      +boxyRadio(radioOption)
